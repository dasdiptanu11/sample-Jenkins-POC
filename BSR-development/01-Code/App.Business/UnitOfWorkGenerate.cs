//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;

namespace App.Business
{
    
     
    public partial class UnitOfWork : IDisposable
    {
        private BusinessEntities context = new BusinessEntities();
    
     
    
        private GenericRepository<aspnet_Applications> _aspnet_ApplicationsRepository;
        private GenericRepository<aspnet_Membership> _aspnet_MembershipRepository;
        private GenericRepository<aspnet_Paths> _aspnet_PathsRepository;
        private GenericRepository<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsersRepository;
        private GenericRepository<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUserRepository;
        private GenericRepository<aspnet_Profile> _aspnet_ProfileRepository;
        private GenericRepository<aspnet_Roles> _aspnet_RolesRepository;
        private GenericRepository<aspnet_SchemaVersions> _aspnet_SchemaVersionsRepository;
        private GenericRepository<aspnet_Users> _aspnet_UsersRepository;
        private GenericRepository<aspnet_UsersInRoles> _aspnet_UsersInRolesRepository;
        private GenericRepository<aspnet_WebEvent_Events> _aspnet_WebEvent_EventsRepository;
        private GenericRepository<tbl_Complications> _tbl_ComplicationsRepository;
        private GenericRepository<tbl_Device> _tbl_DeviceRepository;
        private GenericRepository<tbl_DeviceBrand> _tbl_DeviceBrandRepository;
        private GenericRepository<tbl_FollowUp> _tbl_FollowUpRepository;
        private GenericRepository<tbl_HistoryEmail> _tbl_HistoryEmailRepository;
        private GenericRepository<tbl_HistoryExtract> _tbl_HistoryExtractRepository;
        private GenericRepository<tbl_HistoryLogin> _tbl_HistoryLoginRepository;
        private GenericRepository<tbl_IgnorePatients> _tbl_IgnorePatientsRepository;
        private GenericRepository<tbl_PatientComplications> _tbl_PatientComplicationsRepository;
        private GenericRepository<tbl_PatientOperation> _tbl_PatientOperationRepository;
        private GenericRepository<tbl_PatientOperationDeviceDtls> _tbl_PatientOperationDeviceDtlsRepository;
        private GenericRepository<tbl_Site> _tbl_SiteRepository;
        private GenericRepository<tbl_URN> _tbl_URNRepository;
        private GenericRepository<tbl_User> _tbl_UserRepository;
        private GenericRepository<tlkp_AboriginalStatus> _tlkp_AboriginalStatusRepository;
        private GenericRepository<tlkp_AttemptedCalls> _tlkp_AttemptedCallsRepository;
        private GenericRepository<tlkp_BandType> _tlkp_BandTypeRepository;
        private GenericRepository<tlkp_CauseOfDeath> _tlkp_CauseOfDeathRepository;
        private GenericRepository<tlkp_Complications> _tlkp_ComplicationsRepository;
        private GenericRepository<tlkp_Country> _tlkp_CountryRepository;
        private GenericRepository<tlkp_DeviceManufacturer> _tlkp_DeviceManufacturerRepository;
        private GenericRepository<tlkp_DeviceType> _tlkp_DeviceTypeRepository;
        private GenericRepository<tlkp_DiabetesStatus> _tlkp_DiabetesStatusRepository;
        private GenericRepository<tlkp_DiabetesTreatment> _tlkp_DiabetesTreatmentRepository;
        private GenericRepository<tlkp_FollowUp_FUVal> _tlkp_FollowUp_FUValRepository;
        private GenericRepository<tlkp_FollowUpPeriod> _tlkp_FollowUpPeriodRepository;
        private GenericRepository<tlkp_Gender> _tlkp_GenderRepository;
        private GenericRepository<tlkp_HealthStatus> _tlkp_HealthStatusRepository;
        private GenericRepository<tlkp_IndigenousStatus> _tlkp_IndigenousStatusRepository;
        private GenericRepository<tlkp_OperationStatus> _tlkp_OperationStatusRepository;
        private GenericRepository<tlkp_OperationType> _tlkp_OperationTypeRepository;
        private GenericRepository<tlkp_OptOffStatus> _tlkp_OptOffStatusRepository;
        private GenericRepository<tlkp_OptOutReason> _tlkp_OptOutReasonRepository;
        private GenericRepository<tlkp_PatientGroup> _tlkp_PatientGroupRepository;
        private GenericRepository<tlkp_PortFixationMethod> _tlkp_PortFixationMethodRepository;
        private GenericRepository<tlkp_Procedure> _tlkp_ProcedureRepository;
        private GenericRepository<tlkp_ReasonPort> _tlkp_ReasonPortRepository;
        private GenericRepository<tlkp_ReasonSlip> _tlkp_ReasonSlipRepository;
        private GenericRepository<tlkp_SecurityQuestions> _tlkp_SecurityQuestionsRepository;
        private GenericRepository<tlkp_SentinelEvent> _tlkp_SentinelEventRepository;
        private GenericRepository<tlkp_SiteStatus> _tlkp_SiteStatusRepository;
        private GenericRepository<tlkp_SiteType> _tlkp_SiteTypeRepository;
        private GenericRepository<tlkp_State> _tlkp_StateRepository;
        private GenericRepository<tlkp_Title> _tlkp_TitleRepository;
        private GenericRepository<tlkp_YesNo> _tlkp_YesNoRepository;
        private GenericRepository<tlkp_YesNoNotknownNotStated> _tlkp_YesNoNotknownNotStatedRepository;
        private GenericRepository<tlkp_YesNoNotknownRecorded> _tlkp_YesNoNotknownRecordedRepository;
        private GenericRepository<tlkp_YesNoNotStated> _tlkp_YesNoNotStatedRepository;
        private GenericRepository<tbl_Complications_Audit> _tbl_Complications_AuditRepository;
        private GenericRepository<tbl_Device_Audit> _tbl_Device_AuditRepository;
        private GenericRepository<tbl_DeviceBrand_Audit> _tbl_DeviceBrand_AuditRepository;
        private GenericRepository<tbl_FollowUp_Audit> _tbl_FollowUp_AuditRepository;
        private GenericRepository<tbl_HistoryEmail_Audit> _tbl_HistoryEmail_AuditRepository;
        private GenericRepository<tbl_HistoryExtract_Audit> _tbl_HistoryExtract_AuditRepository;
        private GenericRepository<tbl_HistoryLogin_Audit> _tbl_HistoryLogin_AuditRepository;
        private GenericRepository<tbl_IgnorePatients_Audit> _tbl_IgnorePatients_AuditRepository;
        private GenericRepository<tbl_MonitorFollowUp> _tbl_MonitorFollowUpRepository;
        private GenericRepository<tbl_PatientComplications_Audit> _tbl_PatientComplications_AuditRepository;
        private GenericRepository<tbl_PatientOperation_Audit> _tbl_PatientOperation_AuditRepository;
        private GenericRepository<tbl_PatientOperationDeviceDtls_Audit> _tbl_PatientOperationDeviceDtls_AuditRepository;
        private GenericRepository<tbl_Site_Audit> _tbl_Site_AuditRepository;
        private GenericRepository<tbl_URN_Audit> _tbl_URN_AuditRepository;
        private GenericRepository<tbl_User_Audit> _tbl_User_AuditRepository;
        private GenericRepository<vw_aspnet_Applications> _vw_aspnet_ApplicationsRepository;
        private GenericRepository<vw_aspnet_MembershipUsers> _vw_aspnet_MembershipUsersRepository;
        private GenericRepository<vw_aspnet_Profiles> _vw_aspnet_ProfilesRepository;
        private GenericRepository<vw_aspnet_Roles> _vw_aspnet_RolesRepository;
        private GenericRepository<vw_aspnet_Users> _vw_aspnet_UsersRepository;
        private GenericRepository<vw_aspnet_UsersInRoles> _vw_aspnet_UsersInRolesRepository;
        private GenericRepository<vw_aspnet_WebPartState_Paths> _vw_aspnet_WebPartState_PathsRepository;
        private GenericRepository<vw_aspnet_WebPartState_Shared> _vw_aspnet_WebPartState_SharedRepository;
        private GenericRepository<vw_aspnet_WebPartState_User> _vw_aspnet_WebPartState_UserRepository;
        private GenericRepository<tbl_FollowUpCall> _tbl_FollowUpCallRepository;
        private GenericRepository<tlkp_FollowUpCallResult> _tlkp_FollowUpCallResultRepository;
        private GenericRepository<tlkp_ReasonBowelObstructionOperative> _tlkp_ReasonBowelObstructionOperativeRepository;
        private GenericRepository<tlkp_DeathRelatedToSurgery> _tlkp_DeathRelatedToSurgeryRepository;
        private GenericRepository<tbl_Patient> _tbl_PatientRepository;
        private GenericRepository<tbl_Patient_Audit> _tbl_Patient_AuditRepository;
        private GenericRepository<tbl_UserFavouriteDeviceDetails> _tbl_UserFavouriteDeviceDetailsRepository;
        private GenericRepository<tlkp_ButtressType> _tlkp_ButtressTypeRepository;
        private GenericRepository<tbl_UserFavouriteDeviceDetails_Audit> _tbl_UserFavouriteDeviceDetails_AuditRepository;
        public GenericRepository<aspnet_Applications> aspnet_ApplicationsRepository
    	{
            get
                {
                    if (this._aspnet_ApplicationsRepository == null)
                    {
                        this._aspnet_ApplicationsRepository = new GenericRepository<aspnet_Applications>(context);
                    }
                 return _aspnet_ApplicationsRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_Membership> aspnet_MembershipRepository
    	{
            get
                {
                    if (this._aspnet_MembershipRepository == null)
                    {
                        this._aspnet_MembershipRepository = new GenericRepository<aspnet_Membership>(context);
                    }
                 return _aspnet_MembershipRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_Paths> aspnet_PathsRepository
    	{
            get
                {
                    if (this._aspnet_PathsRepository == null)
                    {
                        this._aspnet_PathsRepository = new GenericRepository<aspnet_Paths>(context);
                    }
                 return _aspnet_PathsRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsersRepository
    	{
            get
                {
                    if (this._aspnet_PersonalizationAllUsersRepository == null)
                    {
                        this._aspnet_PersonalizationAllUsersRepository = new GenericRepository<aspnet_PersonalizationAllUsers>(context);
                    }
                 return _aspnet_PersonalizationAllUsersRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUserRepository
    	{
            get
                {
                    if (this._aspnet_PersonalizationPerUserRepository == null)
                    {
                        this._aspnet_PersonalizationPerUserRepository = new GenericRepository<aspnet_PersonalizationPerUser>(context);
                    }
                 return _aspnet_PersonalizationPerUserRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_Profile> aspnet_ProfileRepository
    	{
            get
                {
                    if (this._aspnet_ProfileRepository == null)
                    {
                        this._aspnet_ProfileRepository = new GenericRepository<aspnet_Profile>(context);
                    }
                 return _aspnet_ProfileRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_Roles> aspnet_RolesRepository
    	{
            get
                {
                    if (this._aspnet_RolesRepository == null)
                    {
                        this._aspnet_RolesRepository = new GenericRepository<aspnet_Roles>(context);
                    }
                 return _aspnet_RolesRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_SchemaVersions> aspnet_SchemaVersionsRepository
    	{
            get
                {
                    if (this._aspnet_SchemaVersionsRepository == null)
                    {
                        this._aspnet_SchemaVersionsRepository = new GenericRepository<aspnet_SchemaVersions>(context);
                    }
                 return _aspnet_SchemaVersionsRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_Users> aspnet_UsersRepository
    	{
            get
                {
                    if (this._aspnet_UsersRepository == null)
                    {
                        this._aspnet_UsersRepository = new GenericRepository<aspnet_Users>(context);
                    }
                 return _aspnet_UsersRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_UsersInRoles> aspnet_UsersInRolesRepository
    	{
            get
                {
                    if (this._aspnet_UsersInRolesRepository == null)
                    {
                        this._aspnet_UsersInRolesRepository = new GenericRepository<aspnet_UsersInRoles>(context);
                    }
                 return _aspnet_UsersInRolesRepository; 
    			}
    
    	}
        public GenericRepository<aspnet_WebEvent_Events> aspnet_WebEvent_EventsRepository
    	{
            get
                {
                    if (this._aspnet_WebEvent_EventsRepository == null)
                    {
                        this._aspnet_WebEvent_EventsRepository = new GenericRepository<aspnet_WebEvent_Events>(context);
                    }
                 return _aspnet_WebEvent_EventsRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Complications> tbl_ComplicationsRepository
    	{
            get
                {
                    if (this._tbl_ComplicationsRepository == null)
                    {
                        this._tbl_ComplicationsRepository = new GenericRepository<tbl_Complications>(context);
                    }
                 return _tbl_ComplicationsRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Device> tbl_DeviceRepository
    	{
            get
                {
                    if (this._tbl_DeviceRepository == null)
                    {
                        this._tbl_DeviceRepository = new GenericRepository<tbl_Device>(context);
                    }
                 return _tbl_DeviceRepository; 
    			}
    
    	}
        public GenericRepository<tbl_DeviceBrand> tbl_DeviceBrandRepository
    	{
            get
                {
                    if (this._tbl_DeviceBrandRepository == null)
                    {
                        this._tbl_DeviceBrandRepository = new GenericRepository<tbl_DeviceBrand>(context);
                    }
                 return _tbl_DeviceBrandRepository; 
    			}
    
    	}
        public GenericRepository<tbl_FollowUp> tbl_FollowUpRepository
    	{
            get
                {
                    if (this._tbl_FollowUpRepository == null)
                    {
                        this._tbl_FollowUpRepository = new GenericRepository<tbl_FollowUp>(context);
                    }
                 return _tbl_FollowUpRepository; 
    			}
    
    	}
        public GenericRepository<tbl_HistoryEmail> tbl_HistoryEmailRepository
    	{
            get
                {
                    if (this._tbl_HistoryEmailRepository == null)
                    {
                        this._tbl_HistoryEmailRepository = new GenericRepository<tbl_HistoryEmail>(context);
                    }
                 return _tbl_HistoryEmailRepository; 
    			}
    
    	}
        public GenericRepository<tbl_HistoryExtract> tbl_HistoryExtractRepository
    	{
            get
                {
                    if (this._tbl_HistoryExtractRepository == null)
                    {
                        this._tbl_HistoryExtractRepository = new GenericRepository<tbl_HistoryExtract>(context);
                    }
                 return _tbl_HistoryExtractRepository; 
    			}
    
    	}
        public GenericRepository<tbl_HistoryLogin> tbl_HistoryLoginRepository
    	{
            get
                {
                    if (this._tbl_HistoryLoginRepository == null)
                    {
                        this._tbl_HistoryLoginRepository = new GenericRepository<tbl_HistoryLogin>(context);
                    }
                 return _tbl_HistoryLoginRepository; 
    			}
    
    	}
        public GenericRepository<tbl_IgnorePatients> tbl_IgnorePatientsRepository
    	{
            get
                {
                    if (this._tbl_IgnorePatientsRepository == null)
                    {
                        this._tbl_IgnorePatientsRepository = new GenericRepository<tbl_IgnorePatients>(context);
                    }
                 return _tbl_IgnorePatientsRepository; 
    			}
    
    	}
        public GenericRepository<tbl_PatientComplications> tbl_PatientComplicationsRepository
    	{
            get
                {
                    if (this._tbl_PatientComplicationsRepository == null)
                    {
                        this._tbl_PatientComplicationsRepository = new GenericRepository<tbl_PatientComplications>(context);
                    }
                 return _tbl_PatientComplicationsRepository; 
    			}
    
    	}
        public GenericRepository<tbl_PatientOperation> tbl_PatientOperationRepository
    	{
            get
                {
                    if (this._tbl_PatientOperationRepository == null)
                    {
                        this._tbl_PatientOperationRepository = new GenericRepository<tbl_PatientOperation>(context);
                    }
                 return _tbl_PatientOperationRepository; 
    			}
    
    	}
        public GenericRepository<tbl_PatientOperationDeviceDtls> tbl_PatientOperationDeviceDtlsRepository
    	{
            get
                {
                    if (this._tbl_PatientOperationDeviceDtlsRepository == null)
                    {
                        this._tbl_PatientOperationDeviceDtlsRepository = new GenericRepository<tbl_PatientOperationDeviceDtls>(context);
                    }
                 return _tbl_PatientOperationDeviceDtlsRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Site> tbl_SiteRepository
    	{
            get
                {
                    if (this._tbl_SiteRepository == null)
                    {
                        this._tbl_SiteRepository = new GenericRepository<tbl_Site>(context);
                    }
                 return _tbl_SiteRepository; 
    			}
    
    	}
        public GenericRepository<tbl_URN> tbl_URNRepository
    	{
            get
                {
                    if (this._tbl_URNRepository == null)
                    {
                        this._tbl_URNRepository = new GenericRepository<tbl_URN>(context);
                    }
                 return _tbl_URNRepository; 
    			}
    
    	}
        public GenericRepository<tbl_User> tbl_UserRepository
    	{
            get
                {
                    if (this._tbl_UserRepository == null)
                    {
                        this._tbl_UserRepository = new GenericRepository<tbl_User>(context);
                    }
                 return _tbl_UserRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_AboriginalStatus> tlkp_AboriginalStatusRepository
    	{
            get
                {
                    if (this._tlkp_AboriginalStatusRepository == null)
                    {
                        this._tlkp_AboriginalStatusRepository = new GenericRepository<tlkp_AboriginalStatus>(context);
                    }
                 return _tlkp_AboriginalStatusRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_AttemptedCalls> tlkp_AttemptedCallsRepository
    	{
            get
                {
                    if (this._tlkp_AttemptedCallsRepository == null)
                    {
                        this._tlkp_AttemptedCallsRepository = new GenericRepository<tlkp_AttemptedCalls>(context);
                    }
                 return _tlkp_AttemptedCallsRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_BandType> tlkp_BandTypeRepository
    	{
            get
                {
                    if (this._tlkp_BandTypeRepository == null)
                    {
                        this._tlkp_BandTypeRepository = new GenericRepository<tlkp_BandType>(context);
                    }
                 return _tlkp_BandTypeRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_CauseOfDeath> tlkp_CauseOfDeathRepository
    	{
            get
                {
                    if (this._tlkp_CauseOfDeathRepository == null)
                    {
                        this._tlkp_CauseOfDeathRepository = new GenericRepository<tlkp_CauseOfDeath>(context);
                    }
                 return _tlkp_CauseOfDeathRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_Complications> tlkp_ComplicationsRepository
    	{
            get
                {
                    if (this._tlkp_ComplicationsRepository == null)
                    {
                        this._tlkp_ComplicationsRepository = new GenericRepository<tlkp_Complications>(context);
                    }
                 return _tlkp_ComplicationsRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_Country> tlkp_CountryRepository
    	{
            get
                {
                    if (this._tlkp_CountryRepository == null)
                    {
                        this._tlkp_CountryRepository = new GenericRepository<tlkp_Country>(context);
                    }
                 return _tlkp_CountryRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_DeviceManufacturer> tlkp_DeviceManufacturerRepository
    	{
            get
                {
                    if (this._tlkp_DeviceManufacturerRepository == null)
                    {
                        this._tlkp_DeviceManufacturerRepository = new GenericRepository<tlkp_DeviceManufacturer>(context);
                    }
                 return _tlkp_DeviceManufacturerRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_DeviceType> tlkp_DeviceTypeRepository
    	{
            get
                {
                    if (this._tlkp_DeviceTypeRepository == null)
                    {
                        this._tlkp_DeviceTypeRepository = new GenericRepository<tlkp_DeviceType>(context);
                    }
                 return _tlkp_DeviceTypeRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_DiabetesStatus> tlkp_DiabetesStatusRepository
    	{
            get
                {
                    if (this._tlkp_DiabetesStatusRepository == null)
                    {
                        this._tlkp_DiabetesStatusRepository = new GenericRepository<tlkp_DiabetesStatus>(context);
                    }
                 return _tlkp_DiabetesStatusRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_DiabetesTreatment> tlkp_DiabetesTreatmentRepository
    	{
            get
                {
                    if (this._tlkp_DiabetesTreatmentRepository == null)
                    {
                        this._tlkp_DiabetesTreatmentRepository = new GenericRepository<tlkp_DiabetesTreatment>(context);
                    }
                 return _tlkp_DiabetesTreatmentRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_FollowUp_FUVal> tlkp_FollowUp_FUValRepository
    	{
            get
                {
                    if (this._tlkp_FollowUp_FUValRepository == null)
                    {
                        this._tlkp_FollowUp_FUValRepository = new GenericRepository<tlkp_FollowUp_FUVal>(context);
                    }
                 return _tlkp_FollowUp_FUValRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_FollowUpPeriod> tlkp_FollowUpPeriodRepository
    	{
            get
                {
                    if (this._tlkp_FollowUpPeriodRepository == null)
                    {
                        this._tlkp_FollowUpPeriodRepository = new GenericRepository<tlkp_FollowUpPeriod>(context);
                    }
                 return _tlkp_FollowUpPeriodRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_Gender> tlkp_GenderRepository
    	{
            get
                {
                    if (this._tlkp_GenderRepository == null)
                    {
                        this._tlkp_GenderRepository = new GenericRepository<tlkp_Gender>(context);
                    }
                 return _tlkp_GenderRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_HealthStatus> tlkp_HealthStatusRepository
    	{
            get
                {
                    if (this._tlkp_HealthStatusRepository == null)
                    {
                        this._tlkp_HealthStatusRepository = new GenericRepository<tlkp_HealthStatus>(context);
                    }
                 return _tlkp_HealthStatusRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_IndigenousStatus> tlkp_IndigenousStatusRepository
    	{
            get
                {
                    if (this._tlkp_IndigenousStatusRepository == null)
                    {
                        this._tlkp_IndigenousStatusRepository = new GenericRepository<tlkp_IndigenousStatus>(context);
                    }
                 return _tlkp_IndigenousStatusRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_OperationStatus> tlkp_OperationStatusRepository
    	{
            get
                {
                    if (this._tlkp_OperationStatusRepository == null)
                    {
                        this._tlkp_OperationStatusRepository = new GenericRepository<tlkp_OperationStatus>(context);
                    }
                 return _tlkp_OperationStatusRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_OperationType> tlkp_OperationTypeRepository
    	{
            get
                {
                    if (this._tlkp_OperationTypeRepository == null)
                    {
                        this._tlkp_OperationTypeRepository = new GenericRepository<tlkp_OperationType>(context);
                    }
                 return _tlkp_OperationTypeRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_OptOffStatus> tlkp_OptOffStatusRepository
    	{
            get
                {
                    if (this._tlkp_OptOffStatusRepository == null)
                    {
                        this._tlkp_OptOffStatusRepository = new GenericRepository<tlkp_OptOffStatus>(context);
                    }
                 return _tlkp_OptOffStatusRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_OptOutReason> tlkp_OptOutReasonRepository
    	{
            get
                {
                    if (this._tlkp_OptOutReasonRepository == null)
                    {
                        this._tlkp_OptOutReasonRepository = new GenericRepository<tlkp_OptOutReason>(context);
                    }
                 return _tlkp_OptOutReasonRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_PatientGroup> tlkp_PatientGroupRepository
    	{
            get
                {
                    if (this._tlkp_PatientGroupRepository == null)
                    {
                        this._tlkp_PatientGroupRepository = new GenericRepository<tlkp_PatientGroup>(context);
                    }
                 return _tlkp_PatientGroupRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_PortFixationMethod> tlkp_PortFixationMethodRepository
    	{
            get
                {
                    if (this._tlkp_PortFixationMethodRepository == null)
                    {
                        this._tlkp_PortFixationMethodRepository = new GenericRepository<tlkp_PortFixationMethod>(context);
                    }
                 return _tlkp_PortFixationMethodRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_Procedure> tlkp_ProcedureRepository
    	{
            get
                {
                    if (this._tlkp_ProcedureRepository == null)
                    {
                        this._tlkp_ProcedureRepository = new GenericRepository<tlkp_Procedure>(context);
                    }
                 return _tlkp_ProcedureRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_ReasonPort> tlkp_ReasonPortRepository
    	{
            get
                {
                    if (this._tlkp_ReasonPortRepository == null)
                    {
                        this._tlkp_ReasonPortRepository = new GenericRepository<tlkp_ReasonPort>(context);
                    }
                 return _tlkp_ReasonPortRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_ReasonSlip> tlkp_ReasonSlipRepository
    	{
            get
                {
                    if (this._tlkp_ReasonSlipRepository == null)
                    {
                        this._tlkp_ReasonSlipRepository = new GenericRepository<tlkp_ReasonSlip>(context);
                    }
                 return _tlkp_ReasonSlipRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_SecurityQuestions> tlkp_SecurityQuestionsRepository
    	{
            get
                {
                    if (this._tlkp_SecurityQuestionsRepository == null)
                    {
                        this._tlkp_SecurityQuestionsRepository = new GenericRepository<tlkp_SecurityQuestions>(context);
                    }
                 return _tlkp_SecurityQuestionsRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_SentinelEvent> tlkp_SentinelEventRepository
    	{
            get
                {
                    if (this._tlkp_SentinelEventRepository == null)
                    {
                        this._tlkp_SentinelEventRepository = new GenericRepository<tlkp_SentinelEvent>(context);
                    }
                 return _tlkp_SentinelEventRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_SiteStatus> tlkp_SiteStatusRepository
    	{
            get
                {
                    if (this._tlkp_SiteStatusRepository == null)
                    {
                        this._tlkp_SiteStatusRepository = new GenericRepository<tlkp_SiteStatus>(context);
                    }
                 return _tlkp_SiteStatusRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_SiteType> tlkp_SiteTypeRepository
    	{
            get
                {
                    if (this._tlkp_SiteTypeRepository == null)
                    {
                        this._tlkp_SiteTypeRepository = new GenericRepository<tlkp_SiteType>(context);
                    }
                 return _tlkp_SiteTypeRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_State> tlkp_StateRepository
    	{
            get
                {
                    if (this._tlkp_StateRepository == null)
                    {
                        this._tlkp_StateRepository = new GenericRepository<tlkp_State>(context);
                    }
                 return _tlkp_StateRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_Title> tlkp_TitleRepository
    	{
            get
                {
                    if (this._tlkp_TitleRepository == null)
                    {
                        this._tlkp_TitleRepository = new GenericRepository<tlkp_Title>(context);
                    }
                 return _tlkp_TitleRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_YesNo> tlkp_YesNoRepository
    	{
            get
                {
                    if (this._tlkp_YesNoRepository == null)
                    {
                        this._tlkp_YesNoRepository = new GenericRepository<tlkp_YesNo>(context);
                    }
                 return _tlkp_YesNoRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_YesNoNotknownNotStated> tlkp_YesNoNotknownNotStatedRepository
    	{
            get
                {
                    if (this._tlkp_YesNoNotknownNotStatedRepository == null)
                    {
                        this._tlkp_YesNoNotknownNotStatedRepository = new GenericRepository<tlkp_YesNoNotknownNotStated>(context);
                    }
                 return _tlkp_YesNoNotknownNotStatedRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_YesNoNotknownRecorded> tlkp_YesNoNotknownRecordedRepository
    	{
            get
                {
                    if (this._tlkp_YesNoNotknownRecordedRepository == null)
                    {
                        this._tlkp_YesNoNotknownRecordedRepository = new GenericRepository<tlkp_YesNoNotknownRecorded>(context);
                    }
                 return _tlkp_YesNoNotknownRecordedRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_YesNoNotStated> tlkp_YesNoNotStatedRepository
    	{
            get
                {
                    if (this._tlkp_YesNoNotStatedRepository == null)
                    {
                        this._tlkp_YesNoNotStatedRepository = new GenericRepository<tlkp_YesNoNotStated>(context);
                    }
                 return _tlkp_YesNoNotStatedRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Complications_Audit> tbl_Complications_AuditRepository
    	{
            get
                {
                    if (this._tbl_Complications_AuditRepository == null)
                    {
                        this._tbl_Complications_AuditRepository = new GenericRepository<tbl_Complications_Audit>(context);
                    }
                 return _tbl_Complications_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Device_Audit> tbl_Device_AuditRepository
    	{
            get
                {
                    if (this._tbl_Device_AuditRepository == null)
                    {
                        this._tbl_Device_AuditRepository = new GenericRepository<tbl_Device_Audit>(context);
                    }
                 return _tbl_Device_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_DeviceBrand_Audit> tbl_DeviceBrand_AuditRepository
    	{
            get
                {
                    if (this._tbl_DeviceBrand_AuditRepository == null)
                    {
                        this._tbl_DeviceBrand_AuditRepository = new GenericRepository<tbl_DeviceBrand_Audit>(context);
                    }
                 return _tbl_DeviceBrand_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_FollowUp_Audit> tbl_FollowUp_AuditRepository
    	{
            get
                {
                    if (this._tbl_FollowUp_AuditRepository == null)
                    {
                        this._tbl_FollowUp_AuditRepository = new GenericRepository<tbl_FollowUp_Audit>(context);
                    }
                 return _tbl_FollowUp_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_HistoryEmail_Audit> tbl_HistoryEmail_AuditRepository
    	{
            get
                {
                    if (this._tbl_HistoryEmail_AuditRepository == null)
                    {
                        this._tbl_HistoryEmail_AuditRepository = new GenericRepository<tbl_HistoryEmail_Audit>(context);
                    }
                 return _tbl_HistoryEmail_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_HistoryExtract_Audit> tbl_HistoryExtract_AuditRepository
    	{
            get
                {
                    if (this._tbl_HistoryExtract_AuditRepository == null)
                    {
                        this._tbl_HistoryExtract_AuditRepository = new GenericRepository<tbl_HistoryExtract_Audit>(context);
                    }
                 return _tbl_HistoryExtract_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_HistoryLogin_Audit> tbl_HistoryLogin_AuditRepository
    	{
            get
                {
                    if (this._tbl_HistoryLogin_AuditRepository == null)
                    {
                        this._tbl_HistoryLogin_AuditRepository = new GenericRepository<tbl_HistoryLogin_Audit>(context);
                    }
                 return _tbl_HistoryLogin_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_IgnorePatients_Audit> tbl_IgnorePatients_AuditRepository
    	{
            get
                {
                    if (this._tbl_IgnorePatients_AuditRepository == null)
                    {
                        this._tbl_IgnorePatients_AuditRepository = new GenericRepository<tbl_IgnorePatients_Audit>(context);
                    }
                 return _tbl_IgnorePatients_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_MonitorFollowUp> tbl_MonitorFollowUpRepository
    	{
            get
                {
                    if (this._tbl_MonitorFollowUpRepository == null)
                    {
                        this._tbl_MonitorFollowUpRepository = new GenericRepository<tbl_MonitorFollowUp>(context);
                    }
                 return _tbl_MonitorFollowUpRepository; 
    			}
    
    	}
        public GenericRepository<tbl_PatientComplications_Audit> tbl_PatientComplications_AuditRepository
    	{
            get
                {
                    if (this._tbl_PatientComplications_AuditRepository == null)
                    {
                        this._tbl_PatientComplications_AuditRepository = new GenericRepository<tbl_PatientComplications_Audit>(context);
                    }
                 return _tbl_PatientComplications_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_PatientOperation_Audit> tbl_PatientOperation_AuditRepository
    	{
            get
                {
                    if (this._tbl_PatientOperation_AuditRepository == null)
                    {
                        this._tbl_PatientOperation_AuditRepository = new GenericRepository<tbl_PatientOperation_Audit>(context);
                    }
                 return _tbl_PatientOperation_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_PatientOperationDeviceDtls_Audit> tbl_PatientOperationDeviceDtls_AuditRepository
    	{
            get
                {
                    if (this._tbl_PatientOperationDeviceDtls_AuditRepository == null)
                    {
                        this._tbl_PatientOperationDeviceDtls_AuditRepository = new GenericRepository<tbl_PatientOperationDeviceDtls_Audit>(context);
                    }
                 return _tbl_PatientOperationDeviceDtls_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Site_Audit> tbl_Site_AuditRepository
    	{
            get
                {
                    if (this._tbl_Site_AuditRepository == null)
                    {
                        this._tbl_Site_AuditRepository = new GenericRepository<tbl_Site_Audit>(context);
                    }
                 return _tbl_Site_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_URN_Audit> tbl_URN_AuditRepository
    	{
            get
                {
                    if (this._tbl_URN_AuditRepository == null)
                    {
                        this._tbl_URN_AuditRepository = new GenericRepository<tbl_URN_Audit>(context);
                    }
                 return _tbl_URN_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_User_Audit> tbl_User_AuditRepository
    	{
            get
                {
                    if (this._tbl_User_AuditRepository == null)
                    {
                        this._tbl_User_AuditRepository = new GenericRepository<tbl_User_Audit>(context);
                    }
                 return _tbl_User_AuditRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_Applications> vw_aspnet_ApplicationsRepository
    	{
            get
                {
                    if (this._vw_aspnet_ApplicationsRepository == null)
                    {
                        this._vw_aspnet_ApplicationsRepository = new GenericRepository<vw_aspnet_Applications>(context);
                    }
                 return _vw_aspnet_ApplicationsRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsersRepository
    	{
            get
                {
                    if (this._vw_aspnet_MembershipUsersRepository == null)
                    {
                        this._vw_aspnet_MembershipUsersRepository = new GenericRepository<vw_aspnet_MembershipUsers>(context);
                    }
                 return _vw_aspnet_MembershipUsersRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_Profiles> vw_aspnet_ProfilesRepository
    	{
            get
                {
                    if (this._vw_aspnet_ProfilesRepository == null)
                    {
                        this._vw_aspnet_ProfilesRepository = new GenericRepository<vw_aspnet_Profiles>(context);
                    }
                 return _vw_aspnet_ProfilesRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_Roles> vw_aspnet_RolesRepository
    	{
            get
                {
                    if (this._vw_aspnet_RolesRepository == null)
                    {
                        this._vw_aspnet_RolesRepository = new GenericRepository<vw_aspnet_Roles>(context);
                    }
                 return _vw_aspnet_RolesRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_Users> vw_aspnet_UsersRepository
    	{
            get
                {
                    if (this._vw_aspnet_UsersRepository == null)
                    {
                        this._vw_aspnet_UsersRepository = new GenericRepository<vw_aspnet_Users>(context);
                    }
                 return _vw_aspnet_UsersRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRolesRepository
    	{
            get
                {
                    if (this._vw_aspnet_UsersInRolesRepository == null)
                    {
                        this._vw_aspnet_UsersInRolesRepository = new GenericRepository<vw_aspnet_UsersInRoles>(context);
                    }
                 return _vw_aspnet_UsersInRolesRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_PathsRepository
    	{
            get
                {
                    if (this._vw_aspnet_WebPartState_PathsRepository == null)
                    {
                        this._vw_aspnet_WebPartState_PathsRepository = new GenericRepository<vw_aspnet_WebPartState_Paths>(context);
                    }
                 return _vw_aspnet_WebPartState_PathsRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_SharedRepository
    	{
            get
                {
                    if (this._vw_aspnet_WebPartState_SharedRepository == null)
                    {
                        this._vw_aspnet_WebPartState_SharedRepository = new GenericRepository<vw_aspnet_WebPartState_Shared>(context);
                    }
                 return _vw_aspnet_WebPartState_SharedRepository; 
    			}
    
    	}
        public GenericRepository<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_UserRepository
    	{
            get
                {
                    if (this._vw_aspnet_WebPartState_UserRepository == null)
                    {
                        this._vw_aspnet_WebPartState_UserRepository = new GenericRepository<vw_aspnet_WebPartState_User>(context);
                    }
                 return _vw_aspnet_WebPartState_UserRepository; 
    			}
    
    	}
        public GenericRepository<tbl_FollowUpCall> tbl_FollowUpCallRepository
    	{
            get
                {
                    if (this._tbl_FollowUpCallRepository == null)
                    {
                        this._tbl_FollowUpCallRepository = new GenericRepository<tbl_FollowUpCall>(context);
                    }
                 return _tbl_FollowUpCallRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_FollowUpCallResult> tlkp_FollowUpCallResultRepository
    	{
            get
                {
                    if (this._tlkp_FollowUpCallResultRepository == null)
                    {
                        this._tlkp_FollowUpCallResultRepository = new GenericRepository<tlkp_FollowUpCallResult>(context);
                    }
                 return _tlkp_FollowUpCallResultRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_ReasonBowelObstructionOperative> tlkp_ReasonBowelObstructionOperativeRepository
    	{
            get
                {
                    if (this._tlkp_ReasonBowelObstructionOperativeRepository == null)
                    {
                        this._tlkp_ReasonBowelObstructionOperativeRepository = new GenericRepository<tlkp_ReasonBowelObstructionOperative>(context);
                    }
                 return _tlkp_ReasonBowelObstructionOperativeRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_DeathRelatedToSurgery> tlkp_DeathRelatedToSurgeryRepository
    	{
            get
                {
                    if (this._tlkp_DeathRelatedToSurgeryRepository == null)
                    {
                        this._tlkp_DeathRelatedToSurgeryRepository = new GenericRepository<tlkp_DeathRelatedToSurgery>(context);
                    }
                 return _tlkp_DeathRelatedToSurgeryRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Patient> tbl_PatientRepository
    	{
            get
                {
                    if (this._tbl_PatientRepository == null)
                    {
                        this._tbl_PatientRepository = new GenericRepository<tbl_Patient>(context);
                    }
                 return _tbl_PatientRepository; 
    			}
    
    	}
        public GenericRepository<tbl_Patient_Audit> tbl_Patient_AuditRepository
    	{
            get
                {
                    if (this._tbl_Patient_AuditRepository == null)
                    {
                        this._tbl_Patient_AuditRepository = new GenericRepository<tbl_Patient_Audit>(context);
                    }
                 return _tbl_Patient_AuditRepository; 
    			}
    
    	}
        public GenericRepository<tbl_UserFavouriteDeviceDetails> tbl_UserFavouriteDeviceDetailsRepository
    	{
            get
                {
                    if (this._tbl_UserFavouriteDeviceDetailsRepository == null)
                    {
                        this._tbl_UserFavouriteDeviceDetailsRepository = new GenericRepository<tbl_UserFavouriteDeviceDetails>(context);
                    }
                 return _tbl_UserFavouriteDeviceDetailsRepository; 
    			}
    
    	}
        public GenericRepository<tlkp_ButtressType> tlkp_ButtressTypeRepository
    	{
            get
                {
                    if (this._tlkp_ButtressTypeRepository == null)
                    {
                        this._tlkp_ButtressTypeRepository = new GenericRepository<tlkp_ButtressType>(context);
                    }
                 return _tlkp_ButtressTypeRepository; 
    			}
    
    	}
        public GenericRepository<tbl_UserFavouriteDeviceDetails_Audit> tbl_UserFavouriteDeviceDetails_AuditRepository
    	{
            get
                {
                    if (this._tbl_UserFavouriteDeviceDetails_AuditRepository == null)
                    {
                        this._tbl_UserFavouriteDeviceDetails_AuditRepository = new GenericRepository<tbl_UserFavouriteDeviceDetails_Audit>(context);
                    }
                 return _tbl_UserFavouriteDeviceDetails_AuditRepository; 
    			}
    
    	}
    	     public void Save()
            {
                context.SaveChanges();
            }
    
            private bool disposed = false;
    
            protected virtual void Dispose(bool disposing)
            {
                if (!this.disposed)
                {
                    if (disposing)
                    {
                        context.Dispose();
                    }
                }
                this.disposed = true;
            }
    
            public void Dispose()
            {
                Dispose(true);
                GC.SuppressFinalize(this);
            }
    
    		}
}
