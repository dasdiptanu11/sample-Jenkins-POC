//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Collections.Generic;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;

namespace App.Business
{
    
     
    public partial class UnitOfWork 
    {
        //private BusinessEntities context = new BusinessEntities();
    
     
    
        public List<LookupItem> Get_tlkp_AboriginalStatus(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_AboriginalStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_AboriginalStatus_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_AboriginalStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_AttemptedCalls(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_AttemptedCallsRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_AttemptedCalls_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_AttemptedCallsRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_BandType(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_BandTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_BandType_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_BandTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_CauseOfDeath(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_CauseOfDeathRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_CauseOfDeath_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_CauseOfDeathRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_Complications(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ComplicationsRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_Complications_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ComplicationsRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_Country(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_CountryRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_Country_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_CountryRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_DeviceManufacturer(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DeviceManufacturerRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_DeviceManufacturer_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DeviceManufacturerRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_DeviceType(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DeviceTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_DeviceType_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DeviceTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_DiabetesStatus(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DiabetesStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_DiabetesStatus_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DiabetesStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_DiabetesTreatment(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DiabetesTreatmentRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_DiabetesTreatment_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DiabetesTreatmentRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_FollowUp_FUVal(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_FollowUp_FUValRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_FollowUp_FUVal_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_FollowUp_FUValRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_FollowUpPeriod(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_FollowUpPeriodRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_FollowUpPeriod_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_FollowUpPeriodRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_Gender(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_GenderRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_Gender_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_GenderRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_HealthStatus(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_HealthStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_HealthStatus_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_HealthStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_IndigenousStatus(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_IndigenousStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_IndigenousStatus_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_IndigenousStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_OperationStatus(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OperationStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_OperationStatus_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OperationStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_OperationType(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OperationTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_OperationType_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OperationTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_OptOffStatus(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OptOffStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_OptOffStatus_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OptOffStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_OptOutReason(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OptOutReasonRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_OptOutReason_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_OptOutReasonRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_PatientGroup(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_PatientGroupRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_PatientGroup_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_PatientGroupRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_PortFixationMethod(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_PortFixationMethodRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_PortFixationMethod_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_PortFixationMethodRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_Procedure(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ProcedureRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_Procedure_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ProcedureRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_ReasonPort(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ReasonPortRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_ReasonPort_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ReasonPortRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_ReasonSlip(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ReasonSlipRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_ReasonSlip_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ReasonSlipRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_SecurityQuestions(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SecurityQuestionsRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_SecurityQuestions_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SecurityQuestionsRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_SentinelEvent(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SentinelEventRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_SentinelEvent_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SentinelEventRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_SiteStatus(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SiteStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_SiteStatus_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SiteStatusRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_SiteType(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SiteTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_SiteType_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_SiteTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_State(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_StateRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_State_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_StateRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_Title(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_TitleRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_Title_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_TitleRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_YesNo(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_YesNo_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_YesNoNotknownNotStated(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoNotknownNotStatedRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_YesNoNotknownNotStated_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoNotknownNotStatedRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_YesNoNotknownRecorded(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoNotknownRecordedRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_YesNoNotknownRecorded_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoNotknownRecordedRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_YesNoNotStated(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoNotStatedRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_YesNoNotStated_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_YesNoNotStatedRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_FollowUpCallResult(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_FollowUpCallResultRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_FollowUpCallResult_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_FollowUpCallResultRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_ReasonBowelObstructionOperative(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ReasonBowelObstructionOperativeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_ReasonBowelObstructionOperative_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ReasonBowelObstructionOperativeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_DeathRelatedToSurgery(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DeathRelatedToSurgeryRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_DeathRelatedToSurgery_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_DeathRelatedToSurgeryRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
        public List<LookupItem> Get_tlkp_ButtressType(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ButtressTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description =  lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    	    public List<LookupItem> Get_tlkp_ButtressType_NoId(bool withEmptyItem)
    	{
    
    	  List<LookupItem> items; 
                using (UnitOfWork bl = new UnitOfWork())
                {
                    items = (from lookup in bl.tlkp_ButtressTypeRepository.Get(orderBy: x=>x.OrderBy(q=>q.Id))
                             select new LookupItem() { Id = lookup.Id.ToString(), Description = lookup.Description }
                             ).ToList<LookupItem>();
               
                    if (withEmptyItem)
                    {
                        items.Insert(0, new LookupItem() { Id = null, Description = null });
                    } 
               }
    
    	 
    	return items;
    	}
    
    }
}
